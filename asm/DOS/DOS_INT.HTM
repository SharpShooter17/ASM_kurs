<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
        "http://www.w3.org/TR/html4/loose.dtd">
<HTML lang="pl">
<HEAD>
<META HTTP-EQUIV="Content-Type"       CONTENT="text/html; charset=ISO-8859-2">
<META HTTP-EQUIV="Content-Language"   CONTENT="pl">
<META http-equiv="Content-Style-Type" content="text/css">
<META HTTP-EQUIV="X-Frame-Options"    CONTENT="DENY">
<LINK rel="stylesheet" href="../asm.css" type="text/css">

<TITLE> Asembler: DOS: Najczê¶ciej stosowane funkcje przerwañ </TITLE>
<link rel="Start"    hreflang="pl" lang="en" href="../index.htm">
<link rel="Contents" hreflang="pl" lang="en" href="../index.htm">

<META NAME="Author" CONTENT="Bogdan D.">
<META NAME="Description" CONTENT="Opis przerwañ">
<META NAME="Keywords" CONTENT="int, assembler, asm, asembler, przerwanie, DOS, BIOS">
<META NAME="Language" CONTENT="pl">
<META NAME="Generator" CONTENT="KWrite">
<meta http-equiv="Last-Modified" content="Sun, Jul 10 2016 10:55:48 GMT">
</HEAD><BODY>

<h1 class="nag">Opis najczê¶ciej u¿ywanych funkcji podstawowych przerwañ</h1>

<P>
Najlepszy opis wszystkich funkcji wszystkich przerwañ mo¿na znale¼æ w
 <span lang="en">Ralf Brown's Interrupt List</span>
(<A HREF="http://www-2.cs.cmu.edu/afs/cs.cmu.edu/user/ralf/pub/WWW/files.html"
 hreflang="en"><acronym title="Ralf Brown's Interrupt List" lang="en">RBIL</acronym></A>).

Po ¶ci±gniêciu RBIL nale¿y rozpakowaæ wszystkie archiwa i uruchomiæ
</p>
<pre>
		COMBINE .</pre>
<p>aby zbudowaæ listê przerwañ, oraz</p>
<pre>
		COMBINE -p .</pre>
<p>
aby zbudowaæ listê portów. Lista przerwañ znajduje siê w pliku <code>INTERRUP.LST</code>,
a mo¿na j± przegl±daæ programem <code>INTERHLP.EXE</code> lub dowolnym edytorem.
Lista portów znajduje siê w pliku <code>PORTS.LST</code>,
a mo¿na j± przegl±daæ programem <code>II.EXE</code> lub dowolnym edytorem.
</P>
<P>
<em class="wazne">UWAGA:</em> Niektóre debugery mog± wp³ywaæ na warto¶ci widziane w rejestrach. Mo¿e
siê tak staæ na przyk³ad wtedy, gdy przerwanie, które wywo³ujemy, jest wewnêtrznie wykorzystywane przez debuger.
W szczególno¶ci, mo¿e to mieæ miejsce w przypadku <span class="b">Turbo Debuggera</span>
i funkcji <code>3Fh</code> i <code>40h</code> przerwania
<acronym lang="en" title="Disk Operating System">DOS</acronym>-a (<code>int 21h</code>).
</P>
<P>
Spis tre¶ci tej strony:</P>
<ul>
 <li><A HREF="#int10h" tabindex="1">int 10h</A> (funkcje 0, 2, 3, E, F i 13h)</li>
 <li><A HREF="#int13h">int 13h</A> (funkcje 2 i 3)</li>
 <li><A HREF="#int15h">int 15h</A> (funkcja 86h)</li>
 <li><A HREF="#int16h">int 16h</A> (funkcje 0, 1, 2 i 4)</li>
 <li><A HREF="#int21h">int 21h</A> (funkcje 1, 2, 9, 2a+2b, 2c+2d, 3c, 3d, 3e,
	3f, 40h, 41h, 42h, 4b i 4c)</li>
</ul>

<!-- ================================================================= -->


<HR>

<h2 class="nag"><A NAME="int10h" id="int10h">int 10h (przerwanie karty graficznej)</a></h2>

<UL>
 <LI>funkcja 0 - ustaw tryb graficzny:<BR>
	<P>Argumenty:</P>
	<UL>
	 <LI>AH = 0</LI>
	 <LI>AL = ¿±dany tryb graficzny (patrz ni¿ej)</LI>
	</UL>
	<P>Podstawowe tryby graficzne i ich <q>rozdzielczo¶ci</q>:</P>
	<UL>
	 <LI>0 - tekstowy, 40x25, segment 0B800</LI>
	 <LI>1 - tekstowy, 40x25, segment 0B800</LI>
	 <LI>2 - tekstowy, 80x25, segment 0B800</LI>
	 <LI>3 - tekstowy (tradycyjny), 80x25, segment 0B800</LI>
	 <LI>12h - graficzny, 640x480 w 16/256tys. kolorach, segment 0A000</LI>
	 <LI>13h - graficzny, 320x200 w 256 kolorach, segment 0A000</LI>
	</UL>
	<BR></LI>

 <LI>funkcja 2 - ustaw pozycjê kursora tekstowego:<BR>
	<P>Argumenty:</P>
	<UL>
	 <LI>AH = 2</LI>
	 <LI>BH = numer strony, zazwyczaj 0</LI>
	 <LI>DH = wiersz (0 oznacza górny)</LI>
	 <LI>DL = kolumna (0 oznacza lew±)</LI>
	</UL>
	<BR><BR></LI>

 <LI>funkcja 3 - pobierz pozycjê kursora tekstowego i jego rozmiar:<BR>
	<P>Argumenty:</P>
	<UL>
	 <LI>AH = 3</LI>
	 <LI>BH = numer strony, zazwyczaj 0</LI>
	</UL>
	<P>Zwraca:</P>
	<UL>
	 <LI>CH = pocz±tkowa linia skanowania (górna granica kursora)</LI>
	 <LI>CL = koñcowa linia skanowania (dolna granica kursora)</LI>
	 <LI>DH = wiersz (0 oznacza górny)</LI>
	 <LI>DL = kolumna (0 oznacza lew±)</LI>
	</UL>
	<BR><BR></LI>

 <LI>funkcja 0Eh - wypisz znak na ekran:<BR>
	<P>Argumenty:</P>
	<UL>
	 <LI>AH = 0Eh</LI>
	 <LI>AL = kod
	 <acronym title="American Standard Code for Information Interchange" lang="en">ASCII</acronym>
	 znaku do wypisania</LI>
	 <LI>BH = numer strony, zazwyczaj 0</LI>
	 <LI>BL = kolor (tylko w trybach graficznych)</LI>
	</UL>
	<BR><BR></LI>

 <LI>funkcja 0Fh - pobierz tryb graficzny:<BR>
	<P>Argumenty:</P>
	<UL>
	 <LI>AH = 0Fh</LI>
	</UL>
	<P>Zwraca:</P>
	<UL>
	 <LI>AH = liczba kolumn znakowych</LI>
	 <LI>AL = bie¿±cy tryb graficzny</LI>
	 <LI>BH = aktywna strona</LI>
	</UL>
	<BR><BR></LI>

 <LI>funkcja 13h - wy¶wietl napis:<BR>
	<P>Argumenty:</P>
	<UL>
	 <LI>AH = 13h</LI>
	 <LI>AL = tryb:
	  <UL>
	   <li>bit 0 ustawiony = przesuwaj kursor po zapisie</li>
	   <li>bit 1 ustawiony = dane zawieraj± naprzemienne znaki i atrybuty
		(bit nieustawiony oznacza, ¿e dane zawieraj± tylko znaki)</li>
	   <li>bit 2-7 s± zarezerwowane i musz± byæ równe 0</li>
	  </UL></LI>
	 <LI>BH = numer strony graficznej</LI>
	 <LI>BL = atrybut znaków, gdy dane zawieraj± tylko znaki</LI>
	 <LI>CX = d³ugo¶æ danych</LI>
	 <LI>DH = numer wiersza na ekranie, gdzie wy¶wietliæ napis</LI>
	 <LI>DL = numer kolumny na ekranie, gdzie wy¶wietliæ napis</LI>
	 <LI>ES:BP = adres danych</LI>
	</UL>
	<BR><BR></LI>

</UL>


<!-- ================================================================= -->

<HR>

<h2 class="nag"><A NAME="int13h" id="int13h">int 13h (obs³uga dysków)</a></h2>

<UL>
 <LI>funkcja 2 - czytaj sektory dysku do pamiêci:<BR>
	<P>Argumenty:</P>
	<UL>
	 <LI>AH = 2</LI>
	 <LI>AL = liczba sektorów do odczytania (musi byæ niezerowa)</LI>
	 <LI>CH = najm³odsze 8 bitów numeru cylindra</LI>
	 <LI>CL = <BR>
		bity 0-5: numer sektora (1-63)<BR>
		bity 6-7: najstarsze 2 bity numeru cylindra (tylko dla twardych dysków)</LI>
	 <LI>DH = numer g³owicy</LI>
	 <LI>DL = numer dysku, dla dysków twardych bit7=1 (0=dysk A:, 1=B:, 80h=C:, 81h=D:, ...)</LI>
	 <LI>ES:BX = adres miejsca, gdzie bêd± zapisane dane odczytane z dysku</LI>
	</UL>

	<P>Zwraca:</P>
	<UL>
	 <LI>flaga CF=1, je¶li wyst±pi³ b³±d; CF=0, gdy nie by³o b³êdu</LI>
	 <LI>AH=status (patrz ni¿ej)</LI>
	 <LI>AL=liczba przeczytanych sektorów (nie zawsze prawid³owy)</LI>
	</UL>

	<P><a name="int13_status">Podstawowe warto¶ci statusu:</a></P>
	<UL>
	 <LI>0 - operacja zakoñczy³a siê bez b³êdów</LI>
	 <LI>3 - dysk jest chroniony przed zapisem</LI>
	 <LI>4 - sektor nie znaleziony / b³±d odczytu</LI>
	 <LI>6 - zmiana dyskietki. Najczê¶ciej spowodowany tym, ¿e napêd nie zd±¿y³ siê
		rozpêdziæ. Ponowiæ próbê.</LI>
	 <LI>80h - przekroczony limit czasu operacji. Dysk nie jest gotowy.</LI>
	</UL>

	<P>
	Przyk³ad (czytanie <span lang="en">boot</span>sektora):</P>
	<PRE title="czytanie pierwszego sektora">
		mov	ax, 0201h	; funkcja czytania sektorów
		xor	dx, dx		; g³owica 0, dysk 0 = A:
		mov	cx, 1		; numer sektora
		mov	bx, bufor	; dok±d czytaæ
		int	13h		; czytaj
		jnc	czyt_ok		; sprawd¼, czy b³±d	</PRE>
	<BR></LI>

 <LI>funkcja 3 - zapisz dane z pamiêci na sektorach dysku:<BR>
	<P>Argumenty:</P>
	<UL>
	 <LI>AH = 3</LI>
	 <LI>AL = liczba sektorów do zapisania (musi byæ niezerowa)</LI>
	 <LI>CH = najm³odsze 8 bitów numeru cylindra</LI>
	 <LI>CL = <BR>
		bity 0-5: numer sektora (1-63)<BR>
		bity 6-7: najstarsze 2 bity numeru cylindra (tylko dla twardych dysków)</LI>
	 <LI>DH = numer g³owicy</LI>
	 <LI>DL = numer dysku, dla dysków twardych bit7=1 (0=dysk A:, 1=B:, 80h=C:, 81h=D:, ...)</LI>
	 <LI>ES:BX = adres miejsca, sk±d bêd± pobierane dane do zapisania na dysk</LI>
	</UL>

	<P>Zwraca:</P>
	<UL>
	 <LI>flaga CF=1, je¶li wyst±pi³ b³±d; CF=0, gdy nie by³o b³êdu</LI>
	 <LI>AH=status (<a href="#int13_status" hreflang="pl">patrz wy¿ej</a>)</LI>
	 <LI>AL=liczba zapisanych sektorów (nie zawsze prawid³owy)</LI>
	</UL>

	<P>
	Przyk³ad (zapisywanie <span lang="en">boot</span>sektora):</P>
	<PRE title="zapisanie pierwszego sektora">
		mov	ax, 0301h	; funkcja zapisu sektorów
		xor	dx, dx		; g³owica 0, dysk 0 = A:
		mov	cx, 1		; numer sektora
		mov	bx, bufor	; sk±d braæ dane do zapisu
		int	13h		; zapisz
		jnc	blad		; sprawd¼, czy b³±d	</PRE>
	</LI>
</UL>



<!-- ================================================================= -->



<BR>
<HR>

<h2 class="nag"><A NAME="int15h" id="int15h">int 15h (czê¶æ
	 <acronym lang="en" title="Basic Input/Output System">BIOS</acronym>-u)</a></h2>

<UL>
 <LI>funkcja 86h - czekaj okre¶lon± liczbê milisekund:<BR>
	<P>Argumenty:</P>
	<UL>
	 <LI>AH = 86h</LI>
	 <LI>CX:DX = czas w milisekundach</LI>
	</UL>
	<P>Zwraca:</P>
	<UL>
	 <LI>flaga CF=0, gdy nie wyst±pi³ b³±d; CF=1 po b³êdzie</LI>
	 <LI>AH = status:<BR>
		80h	nieprawid³owa komenda (PC,PCjr)<BR>
		83h	funkcja ju¿ trwa<BR>
		86h	funkcja nie jest obs³ugiwana (XT)
		</LI>
	</UL>
	</LI>
</UL>





<!-- ================================================================= -->



<BR>
<HR>

<h2 class="nag"><A NAME="int16h" id="int16h">int 16h (obs³uga klawiatury)</a></h2>

<UL>
 <LI>funkcja 0 - pobierz kod naci¶niêtego klawisza (lub czekaj na naci¶niêcie):<BR>
	<P>Argumenty:</P>
	<UL>
	 <LI>AH = 0</LI>
	</UL>
	<P>Zwraca:</P>
	<UL>
	 <LI>AH = BIOSowy kod klawisza (<a href="skankod.htm" hreflang="pl">skankod</a>)</LI>
	 <LI>AL = kod klawisza ASCII</LI>
	</UL>
	<BR><BR></LI>

 <LI>funkcja 1 - sprawd¼, czy naci¶niêto klawisz:<BR>
	<P>Argumenty:</P>
	<UL>
	 <LI>AH = 1</LI>
	</UL>
	<P>Zwraca:</P>
	<UL>
	 <LI>gdy nie naci¶niêto klawisza:
	  <ul>
	   <li>flaga ZF=1</li>
	  </ul><br></LI>
	 <LI>gdy naci¶niêto klawisz:
	  <ul>
	   <li>flaga ZF=0</li>
	   <li>AH = BIOSowy kod klawisza (<a href="skankod.htm" hreflang="pl">skankod</a>)</li>
	   <li>AL = kod klawisza ASCII</li>
	  </ul></LI>
	</UL>
	<BR><BR></LI>

 <LI>funkcja 2 - pobierz stan klawiszów prze³±czaj±cych:<BR>
	<P>Argumenty:</P>
	<UL>
	 <LI>AH = 2</LI>
	</UL>
	<P>Zwraca:</P>
	<UL>
	 <LI>AL = flagi:<BR>
		bit7 = klawisz Insert jest aktywny<BR>
		bit6 = <span lang="en">Caps Lock</span> aktywny<BR>
		bit5 = <span lang="en">Num Lock</span> aktywny<BR>
		bit4 = <span lang="en">Scroll Lock</span> aktywny<BR>
		bit3 = naci¶niêty klawisz ALT<BR>
		bit2 = naci¶niêty klawisz CTRL<BR>
		bit1 = naci¶niêty lewy klawisz <span lang="en">SHIFT</span><BR>
		bit0 = naci¶niêty prawy klawisz <span lang="en">SHIFT</span><BR>
	 </LI>
	</UL>
	<BR><BR></LI>

 <LI>funkcja 4 (Tandy 2000, ale chyba nie tylko) - opró¿nij bufor klawiatury:<BR>
	<P>Argumenty:</P>
	<UL>
	 <LI>AH = 4</LI>
	</UL>
	</LI>

</UL>





<!-- ================================================================= -->



<BR>
<HR>

<h2 class="nag"><A NAME="int21h" id="int21h">int 21h
 (<acronym lang="en" title="Disk Operating System">DOS</acronym>)</a></h2>

<UL>
 <LI>funkcja 1 - czytaj klawisz:<BR>
	<P>Argumenty:</P>
	<UL>
	 <LI>AH = 1</LI>
	</UL>
	<P>Zwraca:</P>
	<UL>
	 <LI>AL = kod klawisza ASCII</LI>
	</UL>
	<BR><BR></LI>

 <LI>funkcja 2 - wy¶wietl znak:<BR>
	<P>Argumenty:</P>
	<UL>
	 <LI>AH = 2</LI>
	 <LI>DL = kod ASCII znaku do wypisania</LI>
	</UL>
	<BR><BR></LI>

 <LI>funkcja 9 - wy¶wietl napis:<BR>
	<P>Argumenty:</P>
	<UL>
	 <LI>AH = 9</LI>
	 <LI>DS:DX = adres ³añcucha znaków zakoñczonego znakiem dolara <q>$</q></LI>
	</UL>
	<BR><BR></LI>

 <LI>funkcja 2A - pobierz datê systemow±:<BR>
	<P>Argumenty:</P>
	<UL>
	 <LI>AH = 2Ah</LI>
	</UL>
	<P>Zwraca:</P>
	<UL>
	 <LI>CX = rok (1980-2099)</LI>
	 <LI>DH = miesi±c</LI>
	 <LI>DL = dzieñ</LI>
	 <LI>podobno AL = dzieñ tygodnia (0=niedziela)</LI>
	</UL>
	<BR><BR></LI>

 <LI>funkcja 2B - ustaw datê systemow±:<BR>
	<P>Argumenty:</P>
	<UL>
	 <LI>AH = 2Ah</LI>
	 <LI>CX = rok (1980-2099)</LI>
	 <LI>DH = miesi±c (1-12)</LI>
	 <LI>DL = dzieñ (1-31)</LI>
	</UL>
	<P>Zwraca:</P>
	<UL>
	 <LI>AL = status (0=sukces, FF=b³±d)</LI>
	</UL>
	<BR><BR></LI>

 <LI>funkcja 2C - pobierz czas systemowy:<BR>
	<P>Argumenty:</P>
	<UL>
	 <LI>AH = 2Ch</LI>
	</UL>
	<P>Zwraca:</P>
	<UL>
	 <LI>CH = godzina</LI>
	 <LI>CL = minuta</LI>
	 <LI>DH = sekunda</LI>
	 <LI>DL = setne sekundy (nie zawsze)</LI>
	</UL>
	<BR><BR></LI>

 <LI>funkcja 2D - ustaw czas systemowy:<BR>
	<P>Argumenty:</P>
	<UL>
	 <LI>AH = 2Dh</LI>
	 <LI>CH = godzina</LI>
	 <LI>CL = minuta</LI>
	 <LI>DH = sekunda</LI>
	 <LI>DL = setne sekundy</LI>
	</UL>
	<P>Zwraca:</P>
	<UL>
	 <LI>AL = status (0=sukces, FF=b³±d)</LI>
	</UL>
	<BR><BR></LI>

 <LI>funkcja 3C - utwórz plik (je¶li istnieje, skróæ do zerowej d³ugo¶ci):<BR>
	<P>Argumenty:</P>
	<UL>
	 <LI>AH = 3Ch</LI>
	 <LI>CX = atrybuty (patrz ni¿ej)</LI>
	 <LI>DS:DX = wska¼nik na nazwê pliku, zakoñczon± bajtem zerowym</LI>
	</UL>
	<P>Zwraca:</P>
	<UL>
	 <LI>gdy brak b³êdu:
	  <ul>
	   <li>flaga CF=0</li>
	   <li>AX = uchwyt do pliku</li>
	  </ul><br></LI>
	 <LI>gdy b³±d:
	  <ul>
	   <li>flaga CF=1</li>
	   <li>AX = numer b³êdu: 3, 4 lub 5 (patrz ni¿ej)</li>
	  </ul></LI>
	</UL>

	<BR>
	<P>Atrybuty pliku:</P>
	<UL>
	 <LI>bit0 = plik tylko do odczytu</LI>
	 <LI>bit1 = ukryty</LI>
	 <LI>bit2 = systemowy</LI>
	 <LI>bit3 = etykieta dysku (ignorowane)</LI>
	 <LI>bit4 = zarezerwowany, musi byæ równy 0 (katalog)</LI>
	 <LI>bit5 = bit archiwalny</LI>
	 <LI>bit7 = udostêpnialno¶æ w <span lang="en">Novell NetWare</span></LI>
	</UL>

	<BR>
	<P><a name="dos_err_code">Najczêstsze zwracane kody:</a></P>
	<UL>
	 <LI>0 = brak b³êdu</LI>
	 <LI>1 = nieprawid³owy numer funkcji</LI>
	 <LI>2 / 3 = plik / ¶cie¿ka nie znaleziona</LI>
	 <LI>4 = za du¿o otwartych plików</LI>
	 <LI>5 = brak dostêpu</LI>
	 <LI>6 = niew³a¶ciwy uchwyt do pliku</LI>
	 <LI>8 = za ma³o pamiêci</LI>
	 <LI>A = nieprawid³owe ¶rodowisko</LI>
	 <LI>B = nieprawid³owy format</LI>
	 <LI>C = nieprawid³owy kod dostêpu</LI>
	 <LI>56h = nieprawid³owe has³o</LI>
	</UL>

	<P>
	Przyk³ad:</P>
	<PRE title="przyk³ad otwierania pliku">
	mov	ah, 3ch			; utwórz plik
	xor	cx, cx			; ¿adnych atrybutów
	mov	dx, plik		; DS:DX = adres nazwy pliku
	int	21h
	jnc	plik_ok			; sprawd¼, czy wyst±pi³ b³±d</PRE>

	<BR></LI>

 <LI>funkcja 3D - otwórz istniej±cy plik:<BR>
	<P>Argumenty:</P>
	<UL>
	 <LI>AH = 3Dh</LI>
	 <LI>AL = tryb dostêpu (patrz ni¿ej)</LI>
	 <LI>DS:DX = adres nazwy pliku zakoñczonej bajtem zerowym</LI>
	 <LI>CL = maska atrybutów pliku do wyszukiwania (tylko serwery)</LI>
	</UL>
	<P>Zwraca:</P>
	<UL>
	 <LI>gdy brak b³êdu:
	  <ul>
	   <li>flaga CF=0</li>
	   <li>AX = uchwyt do pliku</li>
	  </ul><br></LI>
	 <LI>gdy b³±d:
	  <ul>
	   <li>flaga CF=1</li>
	   <li>AX = numer b³êdu: 1, 2, 3, 4, 5, C, 56h (<a href="#dos_err_code" hreflang="pl">patrz wy¿ej</a>)</li>
	  </ul></LI>
	</UL>


	<P>
	Tryb dostêpu do pliku:</P>
	<UL>
	 <LI>bit0-2 = tryb dostêpu:<BR>
		000 = tylko do odczytu<BR>
		001 = tylko do zapisu<BR>
		010 = odczyt/zapis<BR></LI>
	 <LI>bit3 = 0</LI>
	 <LI>bit4-6 = tryb wspó³dzielenia:<BR>
		000 = tryb kompatybilno¶ci<BR>
		001 = zabroñ innym odczytu i zapisu<BR>
		010 = zabroñ innym zapisu<BR>
		011 = zabroñ innym odczytu<BR>
		100 = nie zabraniaj nikomu niczego</LI>
	 <LI>bit7 = prywatno¶æ. Plik nie bêdzie dziedziczony przez procesy potomne</LI>
	</UL>

	<P>
	Przyk³ad:</P>
	<PRE title="przyk³ad tworzenia pliku">
	mov	ax, 3d02h		; otwórz plik R/W, tryb zgodno¶ci
	mov	dx, plik		; DS:DX = adres nazwy pliku
	int	21h
	jnc	otw_ok			</PRE>

	<BR></LI>


 <LI>funkcja 3E - zamknij plik:<BR>
	<P>Argumenty:</P>
	<UL>
	 <LI>AH = 3Eh</LI>
	 <LI>BX = uchwyt do pliku</LI>
	</UL>
	<P>Zwraca:</P>
	<UL>
	 <LI>gdy brak b³êdu:
	  <ul>
	   <li>flaga CF=0</li>
	  </ul><br></LI>
	 <LI>gdy b³±d:
	  <ul>
	   <li>flaga CF=1</li>
	   <li>AX = numer b³êdu: 6 (<a href="#dos_err_code" hreflang="pl">patrz wy¿ej</a>)</li>
	  </ul></LI>
	</UL>
	<BR><BR></LI>


 <LI>funkcja 3F - czytaj z pliku:<BR>
	<P>Argumenty:</P>
	<UL>
	 <LI>AH = 3Fh</LI>
	 <LI>BX = uchwyt do pliku</LI>
	 <LI>CX = liczba bajtów do odczytania</LI>
	 <LI>DS:DX = adres bufora, który ma przyj±æ dane</LI>
	</UL>
	<P>Zwraca:</P>
	<UL>
	 <LI>gdy brak b³êdu:
	  <ul>
	   <li>flaga CF=0</li>
	   <li>AX = liczba przeczytanych bajtów</li>
	  </ul><br></LI>
	 <LI>gdy b³±d:
	  <ul>
	   <li>flaga CF=1</li>
	   <li>AX = numer b³êdu: 5, 6 (<a href="#dos_err_code" hreflang="pl">patrz wy¿ej</a>)</li>
	  </ul></LI>
	</UL>
	<BR><BR></LI>

 <LI>funkcja 40h - zapisz do pliku:<BR>
	<P>Argumenty:</P>
	<UL>
	 <LI>AH = 40h</LI>
	 <LI>BX = uchwyt do pliku</LI>
	 <LI>CX = liczba bajtów do zapisania</LI>
	 <LI>DS:DX = adres bufora zawieraj±cego dane do zapisania</LI>
	</UL>
	<P>Zwraca:</P>
	<UL>
	 <LI>gdy brak b³êdu:
	  <ul>
	   <li>flaga CF=0</li>
	   <li>AX = liczba zapisanych bajtów</li>
	  </ul><br></LI>
	 <LI>gdy b³±d:
	  <ul>
	   <li>flaga CF=1</li>
	   <li>AX = numer b³êdu: 5, 6 (<a href="#dos_err_code" hreflang="pl">patrz wy¿ej</a>)</li>
	  </ul></LI>
	</UL>
	<BR><BR></LI>

 <LI>funkcja 41h - skasuj plik:<BR>
	<P>Argumenty:</P>
	<UL>
	 <LI>AH = 41h</LI>
	 <LI>DS:DX = adres nazwy pliku, zakoñczonej bajtem zerowym</LI>
	 <LI>maska atrybutów (tylko serwery)</LI>
	</UL>
	<P>Zwraca:</P>
	<UL>
	 <LI>gdy brak b³êdu:
	  <ul>
	   <li>flaga CF=0</li>
	  </ul><br></LI>
	 <LI>gdy b³±d:
	  <ul>
	   <li>flaga CF=1</li>
	   <li>AX = numer b³êdu: 2, 3, 5 (<a href="#dos_err_code" hreflang="pl">patrz wy¿ej</a>)</li>
	  </ul></LI>
	</UL>
	<BR><BR></LI>

 <LI>funkcja 42h - ustaw bie¿±c± pozycjê w pliku:<BR>
	<P>Argumenty:</P>
	<UL>
	 <LI>AH = 42h</LI>
	 <LI>AL = sk±d odliczamy pozycjê:<BR>
		0 = pocz±tek pliku<BR>
		1 = bie¿±ca pozycja w pliku<BR>
		2 = koniec pliku</LI>
	 <LI>BX = uchwyt do pliku</LI>
	 <LI>CX:DX = liczba bajtów, o które chcemy siê przesun±æ (mo¿e byæ ujemna)</LI>
	</UL>
	<P>Zwraca:</P>
	<UL>
	 <LI>gdy brak b³êdu:
	  <ul>
	   <li>flaga CF=0</li>
	   <li>DX:AX = nowa pozycja, w bajtach od pocz±tku pliku</li>
	  </ul><br></LI>
	 <LI>gdy b³±d:
	  <ul>
	   <li>flaga CF=1</li>
	   <li>AX = numer b³êdu: 1, 6 (<a href="#dos_err_code" hreflang="pl">patrz wy¿ej</a>)</li>
	  </ul></LI>
	</UL>
	<BR><BR></LI>

 <LI>funkcja 4B - za³aduj i/lub uruchom inny program:<BR>
	<P>Argumenty:</P>
	<UL>
	 <LI>AH = 4Bh</LI>
	 <LI>AL = rodzaj dzia³ania:<BR>
		0 = za³aduj i uruchom<BR>
		1 = za³aduj, ale nie uruchamiaj<BR>
		3 = za³aduj, nak³adaj±c na aktualny program<BR>
		4 = za³aduj i uruchom w tle (tylko European MS-DOS 4.0)</LI>
	 <LI>DS:DX = adres nazwy programu, zakoñczonej bajtem zerowym. Nazwa musi
		 uwzglêdniaæ rozszerzenie pliku.</LI>
	 <LI>ES:BX = adres bloku parametrów (patrz ni¿ej)</LI>
	 <LI>CX = tryb (tylko dla AL=4):<BR>
		0 = proces potomny po zakoñczeniu zostaje umieszczony w stanie zombie<BR>
		1 = kod zakoñczenia procesu potomnego jest odrzucany</LI>
	</UL>

	<P>Zwraca:</P>
	<UL>
	 <LI>gdy brak b³êdu:
	  <ul>
	   <li>flaga CF=0</li>
	  </ul><br></LI>
	 <LI>gdy b³±d:
	  <ul>
	   <li>flaga CF=1</li>
	   <li>AX = numer b³êdu: 1, 2, 5, 8, A, B (<a href="#dos_err_code" hreflang="pl">patrz wy¿ej</a>)</li>
	  </ul></LI>
	</UL>

	<P>
	Blok parametrów (AL=0,1,4):</P>
	<UL>
	 <LI>WORD: segment zmiennych ¶rodowiska dla procesu potomnego (0 = u¿yæ ¶rodowiska
		rodzica)</LI>
	 <LI>DWORD: wska¼nik na liniê poleceñ dla programu uruchamianego</LI>
	 <LI>DWORD: wska¼nik na pierwszy FCB dla procesu potomnego (nieaktualne)</LI>
	 <LI>DWORD: wska¼nik na drugi FCB dla procesu potomnego (nieaktualne)</LI>
	 <LI>(dla AL=1) DWORD: po zakoñczeniu bêdzie zawieraæ pocz±tkowe SS:SP</LI>
	 <LI>(dla AL=1) DWORD: po zakoñczeniu bêdzie zawieraæ pocz±tkowe CS:IP</LI>

	</UL>

	<P>
	Przyk³ad:</P>
	<PRE title="przyk³ad uruchamiania programu">
	mov	[kom_ln+2], cs	;uzupe³niamy pola potrzebnych struktur
	mov	[fcb1+2], cs
	mov	[fcb2+2], cs

	mov	ax, 4b00h	; funkcja uruchomienia programu
	mov	dx, program	; adres nazwy programu
	mov	bx, srod	; ¶rodowisko i ca³a reszta
	int	21h		; uruchamiamy
	....

	fcb 		db 3, &quot; &quot;, 0, 0, 0, 0, 0
	linia_kom 	db 0
	          	times 7fh db 0dh

	srod		dw	0
	kom_ln		dw	linia_kom, 0
	fcb1		dw	fcb, 0
	fcb2		dw	fcb, 0	</PRE>

	<BR></LI>

 <LI>funkcja 4Ch - zakoñcz dzia³anie bie¿±cego programu:<BR>
	<P>Argumenty:</P>
	<UL>
	 <LI>AH = 4Ch</LI>
	 <LI>AL = kod wyj¶cia (<span lang="en">errorlevel</span>)
	 	zwracany systemowi operacyjnemu (przyjmuje
		siê, ¿e AL=0 oznacza zakoñczenie bez b³êdów)</LI>
	</UL>
	</LI>

</UL>


<br><br>
<div class="bezdruk">
<A accesskey="1" hreflang="pl" href="../index.htm">Spis tre¶ci off-<span lang="en">line</span></a> (Alt+1)<BR>
<A accesskey="2" hreflang="pl" href="../index.php">Spis tre¶ci on-<span lang="en">line</span></a> (Alt+2)<br>
<A accesskey="0" hreflang="pl" href="../ulatwie.htm">U³atwienia dla niepe³nosprawnych</a> (Alt+0)<BR>
</div>

</BODY></HTML>

