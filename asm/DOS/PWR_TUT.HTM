<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
        "http://www.w3.org/TR/html4/loose.dtd">
<HTML lang="pl">
<HEAD>
<META HTTP-EQUIV="Content-Type"       CONTENT="text/html; charset=ISO-8859-2">
<META HTTP-EQUIV="Content-Language"   CONTENT="pl">
<META http-equiv="Content-Style-Type" content="text/css">
<META HTTP-EQUIV="X-Frame-Options"    CONTENT="DENY">
<LINK rel="stylesheet" href="../asm.css" type="text/css">

<TITLE> Asembler: DOS: Zarz±dzanie zasilaniem komputera </TITLE>
<link rel="Start"    hreflang="pl" lang="en" href="../index.htm">
<link rel="Contents" hreflang="pl" lang="en" href="../index.htm">

<META NAME="Author" CONTENT="Bogdan D.">
<META NAME="Description" CONTENT="Zarz±dzanie zasilaniem programami napisanymi w asemblerze">
<META NAME="Keywords" CONTENT="Power Management, zarz±dzanie energi±, assembler, asm, asembler, APM">
<META NAME="Language" CONTENT="pl">
<META NAME="Generator" CONTENT="KWrite">
<meta http-equiv="Last-Modified" content="Sun, Jul 10 2016 10:55:49 GMT">
</HEAD><BODY>

<h1 class="nag">Zarz±dzanie zasilaniem komputera</h1>

<P>
Je¶li zastanawiali¶cie siê kiedy¶, jak wy³±czaæ dyski twarde lub resetowaæ komputer
u¿ywaj±c tylko oprogramowania (nie naciskaj±c ¿adnych przycisków), to w tym artykule
powinni¶cie znale¼æ odpowied¼ na wszystkie wasze pytania.
</P>






<BR><HR>
<h2 class="nag">Wy³±czanie monitora</h2>

	<BR><a href="#hdd" tabindex="1" class="bezdruk">(przeskocz wy³±czanie monitora)</a>
<P>
Zajmijmy siê najpierw teori±. Przerwanie, którym najpierw siê zajmiemy, to.... int 10h,
przerwanie sterowników karty graficznej. Co one maj± wspólnego z energi±? Otó¿, mo¿na z
u¿yciem int 10h wy³±czyæ monitor. Zajrzyjmy do
<A HREF="http://www-2.cs.cmu.edu/afs/cs.cmu.edu/user/ralf/pub/WWW/files.html"
 hreflang="en"><acronym title="Ralf Brown's Interrupt List" lang="en">RBIL</acronym></A>, w opis
funkcji numer 4F10h. Uruchomienie jej z BL=0 powinno nas upewniæ, ¿e odpowiednie funkcje
s± zainstalowane (zwróci AL=4Fh):</P>
	<BR><a href="#pwr_tut01" class="bezdruk">(przeskocz sprawdzanie funkcji)</a>
<PRE>
	mov	ax, 4f10h
	mov	bl, 0
	xor	di, di
	mov	es, di		; przerwanie ¿±da ES:DI = 0
	int	10h

	cmp	al, 4fh
	jne	wychodzimy	; gdy klêska....</PRE>

<P><a name="pwr_tut01" id="pwr_tut01">Teraz, je¶li wiemy, ¿e ta funkcja dzia³a</a>,
 to patrzymy na kolejn±. Wpisuj±c 1 do BL mo¿emy
zmieniæ aktualny stan zasilania. W BH podajemy, co chcemy zrobiæ: 0-w³±czyæ, 1-prze³±czyæ w
stan oczekiwania, 2-zawiesiæ, 4-wy³±czyæ monitor. Zanim jednak zaczniecie ochoczo pisaæ,
dam wam radê: program nale¿y napisaæ tak, aby po jakim¶ czasie monitor wraca³ jednak do
stanu w³±czonego (bez resetowania komputera...). Wiem, ¿e potrafiliby¶cie co¶ takiego
sami napisaæ, ale podam tutaj gotowe (i sprawdzone - dzia³a nawet pod Win98) rozwi±zanie:</P>
	<BR><a href="#hdd" class="bezdruk">(przeskocz program wy³±czaj±cy monitor)</a>
<PRE>
	; Program wy³±cza monitor
	;
	; Autor: Bogdan D.
	; kontakt: bogdandr (at) op (dot) pl
	;
	; nasm -O999 -o mon_off.com -f bin mon_off.asm

	org 100h

	start:
		mov ax,4f10h		; wybranie numeru funkcji
		mov bx,0401h		; BL=1 - zmieñ stan. BH=4 - wy³±cz
		int 10h

		xor ah,ah
		int 16h			; poczekaj na naci¶niêcie klawisza

		mov ax,4f10h
		mov bx,1		; BL=1 - zmieñ stan. BH=0 - w³±cz
		int 10h

		mov ax,4c00h
		int 21h</PRE>






<BR>
<HR>
<h2 class="nag"><a name="hdd" id="hdd">Wy³±czanie twardych dysków</a></h2>

	<BR><a href="#pwr" class="bezdruk">(przeskocz wy³±czanie twardych dysków)</a>
<P>
Z dyskami twardymi jest nieco gorzej. Tutaj trzeba siê znaæ na kontrolerze
 <acronym title="Hard Disk Drive" lang="en">HDD</acronym> - na jego
portach i wysy³anych tam komendach. Dlatego pos³u¿ê siê gotowcem. Ma on wy³±czyæ 2 pierwsze
dyski twarde. Dla dok³adniejszych opisów portów i ich komend spójrzcie
do pliku <q>ports.lst</q> do³±czonego do RBIL.
 Gotowiec ten jest czê¶ci± doskona³ego programu FDAPM
(<span lang="en">FreeDOS Advanced Power Management</span>),
 który wraz z kodem ¼ród³owym mo¿na znale¼æ na stronach
<A HREF="http://www.freedos.org/" hreflang="en">projektu <span lang="en">FreeDOS</span></A>.</P>

	<BR><a href="#pwr_tut02" class="bezdruk">(przeskocz program wy³±czaj±cy dyski)</a>
<PRE>
	mov dx,1f6h     ; pierwszy kontroler IDE (drugi: 176)

	mov al,0a0h     ; bez LBA, dysk nadrzêdny (Master)
        out dx,al
        inc dx		; DX = 1F7
        call miniWait	; chwila przerwy
        mov al,0e0h	; e0 = standby, e1 = w³±czony/idle
        out dx,al
        dec dx		; DX = 1F6
        call miniWait
        mov al,0b0h     ; bez LBA, dysk podrzêdny (Slave)
        out dx,al
        inc dx		; DX = 1F7
        call miniWait
        mov al,0e0h	; e0 = standby, e1 = w³±czony/idle
        out dx,al

	mov ax,4c00h
	int 21h

	miniWait:	; bardzo krótki okres przerwy
	xchg ax, bx
	xchg bx, ax
	xchg ax, bx
	xchg bx, ax
	ret</PRE>

<P><a name="pwr_tut02" id="pwr_tut02">Po zatrzymaniu twardego dysku</a> mo¿na go uruchomiæ
 wykonuj±c dowoln± operacjê na systemie plików
(na przyk³ad wy¶wietliæ zawarto¶æ bie¿±cego katalogu).
</P>
<P>
Parkowanie g³owic twardego dysku jest spraw± prostsz±, gdy¿ w tym przypadku pomaga nam
<acronym lang="en" title="Basic Input/Output System">BIOS</acronym>.
Aby zaparkowaæ g³owice pierwszego dysku twardego, u¿yj nastêpuj±cego kodu:</P>
<PRE>
	mov	ah, 19h
	mov	dl, 80h
	int	13h

	jc	blad		; nie pokazuje b³êdów pod Windows 98</PRE>

<P>Je¶li chcecie zaparkowaæ g³owice drugiego dysku, zamiast 80h wpiszcie 81h, je¶li trzeciego - 82h
itd.</P>









<BR>
<HR>
<h2 class="nag"><a name="pwr" id="pwr">Resetowanie i wy³±czanie komputera</a></h2>

<P>
Teraz ciekawsze sprawy - resetowanie komputera lub wy³±czanie go. Na pocz±tek <q>grzecznie</q>
pos³u¿ymy siê przerwaniem - bêdzie to int15h, numery funkcji 5300h i 5307h (po szczegó³owe
opisy tych funkcji posy³am oczywi¶cie do RBIL).
Najpierw sprawd¼my w ogóle, czy <span lang="en">Advanced Power Management (APM)</span>
 - bo o nim mowa - jest zainstalowane:</P>
	<BR><a href="#pwr_tut03" class="bezdruk">(przeskocz sprawdzanie APM)</a>
<PRE>
	mov	ax, 5300h
	xor	bx, bx		; numer urz±dzenia = 0 = BIOS
	int	15h

	jc	niestety   ; gdy co¶ posz³o nie tak (na przyk³ad brak APM), to CF=1</PRE>

<P><a name="pwr_tut03" id="pwr_tut03">Teraz spróbujmy wy³±czyæ system</a>:</P>
	<BR><a href="#pwr_tut04" class="bezdruk">(przeskocz wy³±czanie zasilania)</a>
<PRE>
	mov	ax, 5307h	; funkcja APM
	mov	cx, 3		; wy³±cz system. CX=2 - zawie¶ system, CX=1 -
				; prze³±cz system w stan oczekiwania stand-by
	mov	bx, 1		; wszystkie urz±dzenia
	int	15h		; spróbujemy wy³±czyæ...</PRE>

<P><a name="pwr_tut04" id="pwr_tut04">Je¶li istnieje mo¿liwo¶æ wy³±czenia pr±du w systemie</a>,
 to powy¿szy kod powinien to za³atwiæ.
</P>
<P>
Teraz przejdziemy do innych <q>grzecznych</q> sposobów na zresetowanie komputera. W
RBIL znalaz³em:</P>
	<BR><a href="#pwr_tut05" class="bezdruk">(przeskocz opis przerwañ do resetowania)</a>
<PRE lang="en" title="int 16h, ax=e0ffh; int 14h, ah=17h" >
	INT 16 - AMI BIOS - BIOS-FLASH Interface - GENERATE CPU RESET
	        AX = E0FFh

	INT 14 - FOSSIL - REBOOT SYSTEM
        AH = 17h
        AL = method
            00h = cold boot
            01h = warm boot</PRE>

<P><a name="pwr_tut05" id="pwr_tut05">Jak widaæ, nie wygl±da to skomplikowanie.</a>
 Niestety, ¿aden z powy¿szych sposobów nie dzia³a u
mnie pod <q>czystym</q> <acronym lang="en" title="Disk Operating System">DOS</acronym>-em,
 a pod <span lang="en">Windows</span>98 dzia³a jedynie sposób z APM (int15h).<BR>
</P>
<P>
A teraz poka¿ê kilka <q>niegrzecznych</q> (ale za to sprawdzonych przeze mnie i dzia³aj±cych bez
pud³a) sposobów na zresetowanie komputera.
</P>
<P>
Pierwszym takim sposobem jest d³ugi skok pod adres FFFF:0000 (tam znajduje siê czê¶æ BIOSu
odpowiedzialna za operacje wykonywane przy starcie komputera). Wcze¶niej do segmentu danych
BIOSu (segment 40h), pod adres 72h nale¿y wpisaæ 0, gdy chcemy zimny reset (taki, co
obejmuje testy pamiêci i wszystko inne), a 1234h, gdy chcemy gor±cy reset.</P>
<P>
Odpowiednie kawa³ki kodu wygl±daj± tak (przypominam, ¿e adres 0040h:0072h = 0000:0472h - patrz
czê¶æ 2 mojego kursu):</P>
	<BR><a href="#pwr_tut06" class="bezdruk">(przeskocz kod do rêcznego resetowania)</a>
<PRE>
	; zimny reset:

	mov	ax, 40h
	mov	ds, ax			; DS = 40h
	mov	word [ds:72h], 0	; zimny reset

	; niektóre kompilatory (na przyk³ad TASM) nie lubi± instrukcji w stylu
	; jmp 0FFFFh:0000h, wiêc zakodujê j± rêcznie
	db	0eah		; kod instrukcji wziêty z podrêczników Intela
	dw	0		; offset
	dw	0ffffh		; segment


	; gor±cy reset:

	xor	ax, ax
	mov	ds, ax			; DS = 0
	mov	word [ds:472h], 1234h	; gor±cy reset

	db	0eah		; kod instrukcji wziêty z podrêczników Intela
	dw	0		; offset
	dw	0ffffh		; segment</PRE>

<P><a name="pwr_tut06" id="pwr_tut06">Drugim (i prostszym) sposobem</a>
 jest zapisanie do jednego z portów klawiatury (64h)
jednego z bajtów od F0 do FE, który ma bit0 = 0 (jest takich oczywi¶cie kilka, najczê¶ciej
stosuje siê FEh), chocia¿ ten sposób nie jest zalecany.<BR>
Kod jest wyj±tkowo prosty i wygl±da tak:</P>
<PRE>
	mov	al, 0feh
	out	64h, al</PRE>

<P>
Celowo nie wspominam tutaj o jednym: o przerwaniu int19h, które s³u¿y do ponownego przeczytania
<span lang="en">boot</span>sektorów i prze³adowania systemu od nowa.
 Gdy wk³adacie niesystemow± dyskietkê do stacji
i resetujecie komputer, to (o ile macie mo¿liwo¶æ uruchomienia systemu z dyskietki) pojawia
siê napis informuj±cy o nieprawid³owym dysku systemowym. Po naci¶niêciu Entera uruchamiane
jest w³a¶nie int19h, które nie wykonuje ¿adnych resetów, tylko czyta
 <span lang="en">boot</span>sektory od nowa.</P>
<P>
Nie wspomina³em o int19h, gdy¿ jest ono niebezpieczne. Je¿eli jakikolwiek program przej±³
przerwanie na przyk³ad zegara, to int19h nie przywróci poprzedniej procedury, co jest
 <em class="wazne">nieprzewidywalne w skutkach</em>!
</P>
<HR>
<P>Sposoby na wy³±czanie urz±dzeñ mog± siê Wam przydaæ, gdy na przyk³ad bêdziecie pisaæ w³asny wygaszacz
ekranu, a mo¿liwo¶æ zresetowania komputera przyda siê, gdy Wasze oprogramowanie zostanie
zainstalowane i musi zmieniæ na przyk³ad zawarto¶æ pliku <q><span lang="en">autoexec</span>.bat</q>.<BR>
Informacje, które tutaj poda³em mog± siê Wam te¿ przydaæ przy pisaniu
<span lang="en">boot</span>-sektorów do w³asnych <q>mini-systemów operacyjnych</q>.</P>

<br><br>
<div class="bezdruk">
<A accesskey="1" hreflang="pl" href="../index.htm">Spis tre¶ci off-<span lang="en">line</span></a> (Alt+1)<BR>
<A accesskey="2" hreflang="pl" href="../index.php">Spis tre¶ci on-<span lang="en">line</span></a> (Alt+2)<br>
<A accesskey="0" hreflang="pl" href="../ulatwie.htm">U³atwienia dla niepe³nosprawnych</a> (Alt+0)<BR>
</div>

</BODY></HTML>
