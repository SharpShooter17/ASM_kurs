<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
        "http://www.w3.org/TR/html4/loose.dtd">
<HTML lang="pl">
<HEAD>
<META HTTP-EQUIV="Content-Type"       CONTENT="text/html; charset=ISO-8859-2">
<META HTTP-EQUIV="Content-Language"   CONTENT="pl">
<META http-equiv="Content-Style-Type" content="text/css">
<META HTTP-EQUIV="X-Frame-Options"    CONTENT="DENY">
<LINK rel="stylesheet" href="../asm.css" type="text/css">

<TITLE> Asembler: DOS: Sterowniki .SYS </TITLE>
<link rel="Start"    hreflang="pl" lang="en" href="../index.htm">
<link rel="Contents" hreflang="pl" lang="en" href="../index.htm">

<META NAME="Author" CONTENT="Bogdan D.">
<META NAME="Description" CONTENT="Pisanie plików - sterowników .SYS">
<META NAME="Keywords" CONTENT="sterowniki, .SYS, assembler, asm, asembler">
<META NAME="Language" CONTENT="pl">
<META NAME="Generator" CONTENT="KWrite">
<meta http-equiv="Last-Modified" content="Sun, Jul 10 2016 10:55:49 GMT">
</HEAD><BODY>

<h1 class="nag">Pisanie plików .SYS</h1>

<P>
Sterowniki w postaci plików .SYS dziel± siê na 2 rodzaje:</P>
<UL>
<LI>Nie-<acronym lang="en" title="Disk Operating System">DOS</acronym>-owe pliki .SYS
 (³adowane z <span lang="en">config</span>.sys poleceniem <span lang="en">DEVICE</span>=...)
 zazwyczaj zawieraj± sterowniki takich urz±dzeñ zewnêtrznych jak na przyk³ad <span lang="en">CD-ROM</span>.</LI>
<LI> Pliki .SYS systemu DOS
- na przyk³ad MSDOS.SYS czy IO.SYS. Te pliki zawieraj± sterowniki urz±dzeñ standardowych, jak konsola
CON czy drukarka PRN.<BR></LI>
</UL>

<P>Wszystkie te pliki ³±czy wspólna struktura, któr± postaram siê tutaj przedstawiæ.
Informacje podane przeze mnie s± wycinkiem z dokumentu
<q lang="en">Programmer's Technical Reference for MSDOS and the IBM PC</q>,
 którego kopiê mo¿na znale¼æ na stronach
<A HREF="http://www.o3one.org/hwdocs/bios_doc/dosref22.html" hreflang="en"
>systemu O3one</A> (720 <abbr title="kilobajt">kB</abbr>).</P>
<P>

Pliki .SYS zaczynaj± siê od adresu 0 (org 0), a nag³ówek takiego pliku sk³ada siê z piêciu elementów:</P>
	<BR><a href="#sys_tut01" tabindex="1" class="bezdruk">(przeskocz elementy nag³ówka)</a>
<UL>
 <LI> DWORD - pe³ny adres (najpierw <span lang="en">offset</span>, potem segment)
 	do nastêpnego takiego nag³ówka jak ten, je¶li
	nasz plik .SYS obs³uguje wiêcej ni¿ jedno urz±dzenie. Je¶li mamy tylko jeden sterownik w
	naszym pliku, wpisujemy tutaj warto¶æ -1, czyli FFFF:FFFF.</LI>
 <LI> WORD - atrybut urz±dzenia (opisany dalej)</LI>
 <LI> WORD - <span lang="en">offset</span> <q>procedury strategii</q> danego sterownika (opisane dalej)</LI>
 <LI> WORD - <span lang="en">offset</span> <q>procedury przerwania</q> danego sterownika (opisane dalej)</LI>
 <LI> 8 bajtów - nazwa (urz±dzenie znakowe) dope³niana w razie potrzeby spacjami
 	 do o¶miu znaków lub liczba jednostek (urz±dzenie blokowe)</LI>
</UL>
<P><a name="sys_tut01" id="sys_tut01">Urz±dzenie znakowe to takie</A>,
 które mo¿e wysy³aæ/odbieraæ pojedyncze bajty, na przyk³ad CON, PRN, AUX.
Mo¿na je otwieraæ jak normalne pliki.<BR>
Urz±dzenie blokowe to takie, które operuj± na blokach danych i s± to zazwyczaj dyski.
</P>

	<BR><a href="#sys_tut02" class="bezdruk">(przeskocz tabelê atrybutów urz±dzenia)</a>

<TABLE summary="Ta tabela przedstawia bity atrybutu urz±dzenia i ich znaczenie">
<CAPTION>Bity atrybutu i ich znaczenie</CAPTION>
<TR><TH style="width:10%;" id="nr"> Numer bitu </TH> <TH id="opis"> Znaczenie </TH></TR>
<TR><TD class="c" headers="nr"> 0 </TD> <TD headers="opis"> =0 - to urz±dzenie nie jest standardowym urz±dzeniem wej¶cia<BR>
			 &nbsp;&nbsp;=1 - to urz±dzenie jest standardowym urz±dzeniem wej¶cia </TD></TR>
<TR><TD class="c" headers="nr"> 1 </TD> <TD headers="opis"> =0 - to urz±dzenie nie jest standardowym urz±dzeniem wyj¶cia<BR>
			 &nbsp;&nbsp;=1 - to urz±dzenie jest standardowym urz±dzeniem wyj¶cia </TD></TR>
<TR><TD class="c" headers="nr"> 2 </TD> <TD headers="opis"> =0 - to urz±dzenie nie jest urz±dzeniem NUL<BR>
			 &nbsp;&nbsp;=1 - to urz±dzenie jest urz±dzeniem NUL</TD></TR>
<TR><TD class="c" headers="nr"> 3 </TD> <TD headers="opis"> =0 - to urz±dzenie nie jest urz±dzeniem <span lang="en">CLOCK</span><BR>
			 &nbsp;&nbsp;=1 - to urz±dzenie jest urz±dzeniem <span lang="en">CLOCK</span></TD></TR>
<TR><TD class="c" headers="nr"> 4 </TD> <TD headers="opis"> =0 - nale¿y u¿ywaæ standardowych procedur we/wy CON<BR>
			 &nbsp;&nbsp;=1 - nale¿y u¿ywaæ szybkich procedur we/wy ekranu (int 29h)</TD></TR>
<TR><TD class="c" headers="nr"> 5-10 </TD> <TD headers="opis"> zarezerwowane, musz± byæ równe 0</TD></TR>
<TR><TD class="c" headers="nr"> 11 </TD> <TD headers="opis"> =0 - to urz±dzenie nie obs³uguje wymiennych no¶ników (domy¶lne dla DOS 2.x)<BR>
			 &nbsp;&nbsp;&nbsp;=1 - to urz±dzenie obs³uguje wymienne no¶niki (tylko dla DOS 3.0+)</TD></TR>
<TR><TD class="c" headers="nr"> 12 </TD> <TD headers="opis"> zarezerwowane, musi byæ równy 0</TD></TR>
<TR><TD class="c" headers="nr"> 13 </TD> <TD headers="opis"> =0 - format IBM (urz±dzenia blokowe)<BR>
			 &nbsp;&nbsp;&nbsp;=1 - format nie-IBM (urz±dzenia blokowe)<BR>
			 &nbsp;&nbsp;&nbsp;=1 - obs³uguje funkcjê zapisywania danych a¿ do stanu zajêto¶ci
				(<q lang="en">output till busy</q>, urz±dzenia znakowe)</TD></TR>
<TR><TD class="c" headers="nr"> 14 </TD> <TD headers="opis"> =0 - nie obs³uguje IOCTL<BR>
			 &nbsp;&nbsp;&nbsp;=1 - obs³uguje IOCTL</TD></TR>
<TR><TD class="c" headers="nr"> 15 </TD> <TD headers="opis"> =0 - urz±dzenie blokowe<BR>
			 &nbsp;&nbsp;&nbsp;=1 - urz±dzenie znakowe</TD></TR>
</TABLE>
<P>
<a name="sys_tut02" id="sys_tut02">Ostatnie pole w nag³ówku</a>
 to nazwa urz±dzenia (w przypadku urz±dzeñ znakowych) lub liczba
jednostek/dysków obs³ugiwanych przez ten sterownik (urz±dzenia blokowe).
</P>






<HR>
<h2 class="nag"><q>Procedura strategii</q> (<span lang="en">strategy routine</span>).</h2>

	<BR><a href="#sys_tut03" class="bezdruk">(przeskocz procedurê strategii)</a>
<P>
Za ka¿dym razem, jak DOS chce co¶ od naszego sterownika, uruchamia procedurê strategii,
 podaj±c w parze rejestrów ES:BX adres nag³ówka ¿±dania (<span lang="en">request header</span>).
 Zawiera on informacje o tym, co mamy zrobiæ.<BR>
Jedynym obowi±zkowym zadaniem tej procedury jest zachowanie adresu z ES:BX w zmiennej
lokalnej, aby mo¿na by³o potem odczytywaæ ¿±dania w procedurze przerwania, która uruchamiana jest
 zaraz po procedurze strategii. Je¶li chcemy zrobiæ co¶ wiêcej, musimy
zachowaæ wszystkie rejestry (³±cznie z flagami), które zmieniamy.<BR>
Procedura koñczy siê wywo³aniem RETF, gdy¿ DOS uruchamia nasz sterownik wykonuj±c
 <span lang="en">CALL FAR</span>.</P>
<P>
Tak wiêc najprostszy przyk³ad sprowadza siê do:</P>
<PRE title="zachowywanie adresu nag³ówka ¿±dania">
	mov	word cs:[nagl_zad], bx		; NASM : [cs:nagl_zad]
	mov	word cs:[nagl_zad+2], es	; NASM : [cs:nagl_zad+2]
	retf</PRE>

<BR>






<HR>
<h2 class="nag"><a name="sys_tut03" id="sys_tut03"><q>Procedura przerwania</q></a>
		 (<span lang="en">interrupt routine</span>).</h2>

	<BR><a href="#sys_tut04" class="bezdruk">(przeskocz procedurê przerwania)</a>
<P>
Ta procedura jest odpowiedzialna za wykonywanie poleceñ od systemu. Polecenia te s± zawarte w
nag³ówku ¿±dania, który teraz omówiê.<BR>
W procedurze przerwania równie¿ nale¿y zachowaæ wszystkie modyfikowane rejestry i wróciæ do DOSa
 poleceniem RETF. Procedura przerwania jest uruchamiana przez DOS tu¿ po powrocie z
 procedury strategii, która musi zachowaæ bie¿±cy adres nag³ówka ¿±dania.
</P>

	<BR><a href="#sys_tut05" class="bezdruk">(przeskocz opis nag³ówka ¿±dania)</a>

<TABLE summary="Ta tabela opisuje nag³ówek ¿±dania, które sterownik otrzymuje od systemu">
<CAPTION> Nag³ówek ¿±dania </CAPTION>
<TR><TH style="width:10%;" id="dist"> Odleg³o¶æ od pocz±tku </TH>
	<TH style="width:10%;" id="len"> D³ugo¶æ </TH>
	<TH id="zaw"> Zawarto¶æ </TH></TR>

<TR class="c"><TD headers="dist"> 0 </TD> <TD headers="len"> 1 bajt </TD> <TD headers="zaw"> D³ugo¶æ w bajtach ca³ego nag³ówka i ewentualnych danych</TD></TR>
<TR class="c"><TD headers="dist"> 1 </TD> <TD headers="len"> 1 </TD> <TD headers="zaw"> Kod podjednostki w urz±dzeniach blokowych.
				 Nieistotne dla urz±dzeñ znakowych</TD></TR>
<TR class="c"><TD headers="dist"> 2 </TD> <TD headers="len"> 1 </TD> <TD headers="zaw"> Kod rozkazu</TD></TR>
<TR class="c"><TD headers="dist"> 3 </TD> <TD headers="len"> 2 </TD> <TD headers="zaw"> Status wykonania</TD></TR>
<TR class="c"><TD headers="dist"> 5 </TD> <TD headers="len"> 8 </TD> <TD headers="zaw"> zarezerwowane dla DOSa</TD></TR>
<TR class="c"><TD headers="dist"> 0Ch </TD> <TD headers="len"> ró¿na </TD> <TD headers="zaw"> Dane odpowiednie dla operacji</TD></TR>

</TABLE>

<P><a name="sys_tut05" id="sys_tut05">Kod podjednostki w urz±dzeniach blokowych</a>
 jest istotny, gdy nasz sterownik obs³uguje wiêcej ni¿ 1 urz±dzenie.</P>

	<BR><a href="#sys_tut06" class="bezdruk">(przeskocz listê rozkazów)</a>

<TABLE summary="Ta tabela opisuje rozkazy, jakie mo¿e otrzymaæ sterownik">
<CAPTION> Kod rozkazu </CAPTION>
<TR><TH style="width:10%;" id="kod"> Kod </TH> <TH style="width:25%;" id="nazwa"> Nazwa </TH>
	<TH id="funkcja"> Funkcja </TH> </TR>

<TR><TD class="c" headers="kod"> 0 </TD> <TD class="c" headers="nazwa"> <span lang="en">INIT</span> </TD>
		 <TD headers="funkcja"> Inicjalizacja sterownika. U¿ywane tylko raz.</TD></TR>
<TR><TD class="c" headers="kod"> 1 </TD> <TD class="c" headers="nazwa"> <span lang="en">MEDIA CHECK</span> </TD>
		 <TD headers="funkcja"> Sprawdzanie, czy zmieniono dysk od ostatniego sprawdzenia.
		U¿ywane tylko w urz±dzeniach blokowych. Urz±dzenia znakowe nic nie robi±.</TD></TR>
<TR><TD class="c" headers="kod"> 2 </TD> <TD class="c" headers="nazwa"> <span lang="en">BUILD BPB</span> </TD>
		 <TD headers="funkcja"> Stworzenie nowego <span lang="en">BIOS Parameter Block</span> (BPB).
		U¿ywane tylko w urz±dzeniach blokowych. Urz±dzenia znakowe nic nie robi±.</TD></TR>
<TR><TD class="c" headers="kod"> 3 </TD> <TD class="c" headers="nazwa"> <span lang="en">IOCTL INPUT</span> </TD>
		 <TD headers="funkcja"> Odczyt IOCTL.
		Uruchamiane tylko wtedy, gdy urz±dzenie ma ustawiony bit IOCTL.</TD></TR>
<TR><TD class="c" headers="kod"> 4 </TD> <TD class="c" headers="nazwa"> <span lang="en">INPUT</span> </TD>
		 <TD headers="funkcja"> Odczyt danych.</TD></TR>
<TR><TD class="c" headers="kod"> 5 </TD> <TD class="c" headers="nazwa"> <span lang="en">NONDESTRUCTIVE INPUT NO WAIT</span> </TD>
		 <TD headers="funkcja"> Odczyt danych.</TD></TR>
<TR><TD class="c" headers="kod"> 6 </TD> <TD class="c" headers="nazwa"> <span lang="en">INPUT STATUS</span> </TD>
		 <TD headers="funkcja"> Stan odczytu </TD></TR>
<TR><TD class="c" headers="kod"> 7 </TD> <TD class="c" headers="nazwa"> <span lang="en">INPUT FLUSH</span> </TD>
		 <TD headers="funkcja"> Opró¿nienie kolejki wej¶ciowej </TD></TR>
<TR><TD class="c" headers="kod"> 8 </TD> <TD class="c" headers="nazwa"> <span lang="en">OUTPUT</span> </TD>
		 <TD headers="funkcja"> Zapis danych. </TD></TR>
<TR><TD class="c" headers="kod"> 9 </TD> <TD class="c" headers="nazwa"> <span lang="en">OUTPUT</span> </TD>
		 <TD headers="funkcja"> Zapis danych z weryfikacj±. </TD></TR>
<TR><TD class="c" headers="kod"> 10 </TD> <TD class="c" headers="nazwa"> <span lang="en">OUTPUT STATUS</span> </TD>
		 <TD headers="funkcja"> Stan zapisu </TD></TR>
<TR><TD class="c" headers="kod"> 11 </TD> <TD class="c" headers="nazwa"> <span lang="en">OUTPUT FLUSH</span> </TD>
		 <TD headers="funkcja"> Opró¿nienie kolejki wyj¶ciowej </TD></TR>
<TR><TD class="c" headers="kod"> 12 </TD> <TD class="c" headers="nazwa"> <span lang="en">IOCTL OUTPUT</span> </TD>
		 <TD headers="funkcja"> Zapis IOCTL. Uruchamiane tylko wtedy, gdy urz±dzenie ma ustawiony bit IOCTL.</TD></TR>
<TR><TD class="c" headers="kod"> 13 </TD> <TD class="c" headers="nazwa"> <span lang="en">DEVICE OPEN</span> </TD>
		 <TD headers="funkcja"> Uruchamiane tylko wtedy, gdy urz±dzenie ma ustawiony bit <span lang="en">OPEN/CLOSE/RM</span>.</TD></TR>
<TR><TD class="c" headers="kod"> 14 </TD> <TD class="c" headers="nazwa"> <span lang="en">DEVICE CLOSE</span> </TD>
		 <TD headers="funkcja"> Uruchamiane tylko wtedy, gdy urz±dzenie ma ustawiony bit <span lang="en">OPEN/CLOSE/RM</span>.</TD></TR>
<TR><TD class="c" headers="kod"> 15 </TD> <TD class="c" headers="nazwa"> <span lang="en">REMOVEABLE MEDIA</span> </TD>
		 <TD headers="funkcja"> Uruchamiane tylko wtedy, gdy urz±dzenie blokowe ma ustawiony bit <span lang="en">OPEN/CLOSE/RM</span>.</TD></TR>
<TR><TD class="c" headers="kod"> 16 </TD> <TD class="c" headers="nazwa"> <span lang="en">OUTPUT UNTIL BUSY</span> </TD>
		 <TD headers="funkcja"> Uruchamiane tylko wtedy, gdy urz±dzenie znakowe ma ustawiony bit 13.</TD></TR>
</TABLE>
<P><a name="sys_tut06" id="sys_tut06">Najwa¿niejsze rozkazy</a> s± opisane dalej.</P>


	<BR><a href="#sys_tut07" class="bezdruk">(przeskocz listê wyników dzia³ania)</a>
<TABLE summary="Ta tabela przedstawia mo¿liwe wyniki dzia³ania sterownika">
<CAPTION> Status wykonania zadania </CAPTION>
<TR> <TH style="width:20%;" id="bit"> bit </TH> <TH id="znaczenie"> Znaczenie </TH> </TR>
<TR class="c"> <TD headers="bit"> 0-7 </TD> <TD headers="znaczenie"> Kod b³êdu, gdy bit15 = 1 </TD></TR>
<TR class="c"> <TD headers="bit"> 8 </TD> <TD headers="znaczenie"> =1 oznacza <q>Operacja zakoñczona</q> </TD></TR>
<TR class="c"> <TD headers="bit"> 9 </TD> <TD headers="znaczenie"> =1 oznacza <q>Urz±dzenie zajête</q> </TD></TR>
<TR class="c"> <TD headers="bit"> 10-14 </TD> <TD headers="znaczenie"> Zarezerwowane dla DOSa </TD></TR>
<TR class="c"> <TD headers="bit"> 15 </TD> <TD headers="znaczenie"> =1 oznacza <q>b³±d</q> </TD></TR>
</TABLE>
<BR>


	<BR><a href="#sys_tut04" class="bezdruk">(przeskocz listê b³êdów sterownika)</a>
<TABLE summary="Ta tabela przedstawia mo¿liwe b³êdy sterownika">
<CAPTION> <a name="sys_tut07" id="sys_tut07">Znaczenie numerów b³êdów</a> </CAPTION>
<TR> <TH style="width:10%;" id="errn"> numer </TH> <TH id="err"> Typ b³êdu </TH> </TR>
<TR class="c"> <TD headers="errn"> 0 </TD> <TD headers="err"> naruszenie ochrony przed zapisem </TD></TR>
<TR class="c"> <TD headers="errn"> 1 </TD> <TD headers="err"> nieznana jednostka </TD></TR>
<TR class="c"> <TD headers="errn"> 2 </TD> <TD headers="err"> urz±dzenie nie jest gotowe </TD></TR>
<TR class="c"> <TD headers="errn"> 3 </TD> <TD headers="err"> nieznana komenda </TD></TR>
<TR class="c"> <TD headers="errn"> 4 </TD> <TD headers="err"> b³±d CRC </TD></TR>
<TR class="c"> <TD headers="errn"> 5 </TD> <TD headers="err"> nieprawid³owa d³ugo¶æ struktury ¿±dania dostêpu do dysku </TD></TR>
<TR class="c"> <TD headers="errn"> 6 </TD> <TD headers="err"> b³±d wyszukania (<span lang="en">seek error</span>) </TD></TR>
<TR class="c"> <TD headers="errn"> 7 </TD> <TD headers="err"> nieznany no¶nik </TD></TR>
<TR class="c"> <TD headers="errn"> 8 </TD> <TD headers="err"> sektor nie znaleziony </TD></TR>
<TR class="c"> <TD headers="errn"> 9 </TD> <TD headers="err"> koniec papieru w drukarce </TD></TR>
<TR class="c"> <TD headers="errn"> 10 </TD> <TD headers="err"> b³±d zapisu </TD></TR>
<TR class="c"> <TD headers="errn"> 11 </TD> <TD headers="err"> b³±d odczytu </TD></TR>
<TR class="c"> <TD headers="errn"> 12 </TD> <TD headers="err"> b³±d ogólny </TD></TR>
<TR class="c"> <TD headers="errn"> 13 </TD> <TD headers="err"> zarezerwowane </TD></TR>
<TR class="c"> <TD headers="errn"> 14 </TD> <TD headers="err"> zarezerwowane </TD></TR>
<TR class="c"> <TD headers="errn"> 15 </TD> <TD headers="err"> nieprawid³owa zmiana dysku </TD></TR>
</TABLE>
<BR><BR>







<HR>
<h2 class="nag"> <a name="sys_tut04" id="sys_tut04">Rozkazy</a> </h2>

	<BR><a href="#sys_tut08" class="bezdruk">(przeskocz listê rozkazów sterownika)</a>
<UL>
 <LI><span lang="en">INIT</span>

	<BR><a href="#sys_tut09" class="bezdruk">(przeskocz rozkaz init)</a>
 <P>

ES:BX wskazuje na strukturê zawieraj±c± nag³ówek ¿±dania i dane. Ta struktura wygl±da tak:</P>

<TABLE summary="Tabela opisuj±ca strukturê zawieraj±c± nag³ówek ¿±dania">
<caption>Nag³ówek ¿±dania</caption>
<TR><TH style="width:10%;" id="odl"> Odleg³o¶æ od pocz±tku </TH> <TH style="width:10%;" id="dl"> D³ugo¶æ </TH>
	 <TH id="cont"> Zawarto¶æ </TH></TR>

<TR><TD class="c" headers="odl"> 0 </TD> <TD class="c" headers="dl"> 13 bajtów </TD> <TD headers="cont"> Nag³ówek ¿±dania</TD></TR>
<TR><TD class="c" headers="odl"> 0Dh </TD> <TD class="c" headers="dl"> 1 </TD> <TD headers="cont"> Liczba jednostek w urz±dzeniach blokowych.
				 Nieistotne dla urz±dzeñ znakowych</TD></TR>
<TR><TD class="c" headers="odl"> 0Eh? </TD> <TD class="c" headers="dl"> 4 </TD> <TD headers="cont"> Offset i segment koñca kodu naszego sterownika.
			Mówi DOSowi, ile pamiêci mo¿na zwolniæ (wymieniony wcze¶niej dokument podaje
			tutaj offset 11h, który nie jest prawid³owy).</TD></TR>
<TR><TD class="c" headers="odl"> 12h? </TD> <TD class="c" headers="dl"> 4 </TD> <TD headers="cont"> Wska¼nik na tablicê BPB (nieistotne dla urz±dzeñ znakowych)
			/ wska¼nik na resztê argumentów (wymieniony wcze¶niej dokument podaje
			tutaj offset 15h).</TD></TR>
<TR><TD class="c" headers="odl"> 16h? </TD> <TD class="c" headers="dl"> 1 </TD> <TD headers="cont"> numer dysku (DOS 3.0+) (wymieniony wcze¶niej dokument podaje
			tutaj offset 19h).</TD></TR>
</TABLE>

<P>W czasie inicjalizacji nale¿y:</P>
  <OL>
   <LI>ustawiæ liczbê jednostek (tylko w urz±dzeniach blokowych). Wpisaæ 0, je¶li nie mo¿na
	uruchomiæ urz±dzenia.</LI>
   <LI>ustawiæ wska¼nik na tablicê BPB (tylko w urz±dzeniach blokowych)</LI>
   <LI>wykonaæ czynno¶ci inicjalizacyjne (na przyk³ad modemów, drukarek)</LI>
   <LI>ustawiæ adres koñca rezydentnego kodu. Wstawiæ CS:0, je¶li nie mo¿na
	uruchomiæ urz±dzenia.</LI>
   <LI>ustawiæ odpowiedni status w nag³ówku ¿±dania</LI>
  </OL>

<BR></LI>








 <LI><a name="sys_tut09" id="sys_tut09">Odczyt/Zapis (funkcje: 3, 4, 8, 9, 12, 16)</a>

	<BR><a href="#sys_tut10" class="bezdruk">(przeskocz rozkazy odczytu i zapisu)</a>

 <P>

ES:BX wskazuje na strukturê zawieraj±c± nag³ówek ¿±dania i dane. Ta struktura wygl±da tak:</P>

<TABLE summary="Tabela opisuj±ca strukturê zawieraj±c± nag³ówek ¿±dania">
<caption>Nag³ówek ¿±dania</caption>
<TR><TH style="width:10%;" id="odl2"> Odleg³o¶æ od pocz±tku </TH> <TH style="width:10%;" id="dl2"> D³ugo¶æ </TH>
	 <TH id="cont2"> Zawarto¶æ </TH></TR>

<TR><TD class="c" headers="odl2"> 0 </TD> <TD class="c" headers="dl2"> 13 bajtów</TD> <TD headers="cont2"> Nag³ówek ¿±dania</TD></TR>
<TR><TD class="c" headers="odl2"> 0Dh </TD> <TD class="c" headers="dl2"> 1 </TD> <TD headers="cont2"> Bajt deskryptora no¶nika z BPB
		 (<span lang="en">Media Descriptor Byte</span>)</TD></TR>
<TR><TD class="c" headers="odl2"> 0Eh </TD> <TD class="c" headers="dl2"> 4 </TD> <TD headers="cont2"> Offset i segment bufora, z którego dane bêd± odczytywane/
			do którego dane bêd± zapisywane.</TD></TR>
<TR><TD class="c" headers="odl2"> 12h </TD> <TD class="c" headers="dl2"> 2 </TD> <TD headers="cont2"> Liczba bajtów/sektorów do zapisania/odczytania.</TD></TR>
<TR><TD class="c" headers="odl2"> 14h </TD> <TD class="c" headers="dl2"> 1 </TD> <TD headers="cont2"> Pocz±tkowy numer sektora (tylko urz±dzenia blokowe).
			Nie ma znaczenia dla urz±dzeñ znakowych.</TD></TR>
<TR><TD class="c" headers="odl2"> 16h </TD> <TD class="c" headers="dl2"> 4 </TD> <TD headers="cont2"> Offset i segment identyfikatora napêdu
			(<span lang="en">volume ID</span>), gdy zwrócono kod b³êdu 0Fh.</TD></TR>
</TABLE>

<P>

W czasie tej operacji nale¿y:</P>
  <OL>
   <LI>ustawiæ odpowiedni status w nag³ówku ¿±dania</LI>
   <LI>wykonaæ zadanie</LI>
   <LI>ustawiæ rzeczywist± liczbê przeniesionych bajtów/sektorów</LI>
  </OL>
 <BR></LI>





 <LI><a name="sys_tut10" id="sys_tut10"><span lang="en">NONDESTRUCTIVE INPUT NO WAIT</span></a>

	<BR><a href="#sys_tut11" class="bezdruk">(przeskocz rozkaz <span lang="en">NONDESTRUCTIVE INPUT NO WAIT</span>)</a>

 <P>

Ten odczyt ró¿ni siê od innych tym, ¿e nie usuwa odczytanych danych z bufora.</P>
<P>ES:BX wskazuje na strukturê zawieraj±c± nag³ówek ¿±dania i dane. Ta struktura wygl±da tak:</P>

<TABLE summary="Tabela opisuj±ca strukturê zawieraj±c± nag³ówek ¿±dania">
<caption>Nag³ówek ¿±dania</caption>
<TR><TH style="width:10%;" id="odl3"> Odleg³o¶æ od pocz±tku </TH> <TH style="width:10%;" id="dl3"> D³ugo¶æ </TH>
 <TH id="cont3"> Zawarto¶æ </TH></TR>

<TR><TD class="c" headers="odl3"> 0 </TD> <TD class="c" headers="dl3"> 13 bajtów</TD> <TD headers="cont3"> Nag³ówek ¿±dania</TD></TR>
<TR><TD class="c" headers="odl3"> 0Dh </TD> <TD class="c" headers="dl3"> 1 </TD> <TD headers="cont3"> Bajt odczytany z urz±dzenia</TD></TR>
</TABLE>

<P>

W czasie tej operacji nale¿y:</P>
  <OL>
   <LI>zwróciæ bajt odczytany z urz±dzenia</LI>
   <LI>ustawiæ odpowiedni status w nag³ówku ¿±dania</LI>
  </OL>

 <BR></LI>






 <LI><a name="sys_tut11" id="sys_tut11"><span lang="en">INPUT FLUSH</span></a>

	<BR><a href="#sys_tut12" class="bezdruk">(przeskocz rozkaz <span lang="en">INPUT FLUSH</span>)</a>

 <P>
Wymuszenie wykonania wszystkich operacji odczytu, o których wie sterownik.<BR>
ES:BX wskazuje na nag³ówek ¿±dania.</P>

<P>W czasie tej operacji nale¿y:</P>
  <OL>
   <LI>ustawiæ odpowiedni status w nag³ówku ¿±dania</LI>
  </OL>


 <BR></LI>







 <LI><a name="sys_tut12" id="sys_tut12"><span lang="en">OUTPUT FLUSH</span></a>

	<BR><a href="#sys_tut08" class="bezdruk">(przeskocz rozkaz <span lang="en">OUTPUT FLUSH</span>)</a>

 <P>
Wymuszenie wykonania wszystkich operacji zapisu, o których wie sterownik.<BR>
ES:BX wskazuje na nag³ówek ¿±dania.</P>

<P>W czasie tej operacji nale¿y:</P>
  <OL>
   <LI>ustawiæ odpowiedni status w nag³ówku ¿±dania</LI>
  </OL>
 </LI>
</UL>








<BR>

<HR>
<h2 class="nag"><a name="sys_tut08" id="sys_tut08">Przyk³ad</a></h2>
<P>
Sk³adaj±c razem powy¿sze informacje, napisa³em taki oto przyk³adowy plik .SYS.<BR>
Jest to sterownik wymy¶lonego urz±dzenia znakowego <q>MYSZKA1</q>, który obs³uguje tylko
funkcjê INIT (oczywi¶cie) i <q>pobieranie danych</q> z urz±dzenia, które sprowadza siê do
zwrócenia starego znacznika EOF (1Ah).</P>
<P>
Aby by³o widaæ, ¿e mój sterownik siê ³aduje (dziêki linii <span lang="en">DEVICE</span>=...
w <span lang="en">config.sys</span>), dorobi³em kod wy¶wietlaj±cy na ekranie informacjê o ³adowaniu.<BR>
Resztê zobaczcie sami:</P>

	<BR><a href="#sys_tut13" class="bezdruk">(przeskocz przyk³adowy kod)</a>
<PRE title="przyk³adowy sterownik .sys">
; Przyk³ad sterownika typu .SYS
; Autor: Bogdan D.
; kontakt: bogdandr (ma³pka) op (kropka) pl
;
; kompilacja:
; nasm -O999 -w+orphan-labels -o protosys.sys -f bin protosys.asm

dd	0FFFFFFFFh		; wska¼nik na nastêpny sterownik
				; -1, bo mamy tylko 1 urz±dzenie
dw	08000h			; atrybuty (urz. znakowe), output till busy (A000)
dw	strategia		; adres procedury strategii
dw	przerwanie		; adres procedury przerwania
db	"MYSZKA1 "	; nazwa urz±dzenia (8 znaków, dope³niane spacjami)

przerwanie:
	pushf
	push	es
	push	bx
	push	ax

	les	bx, [cs:request_header]	; ES:BX wskazuje na nag³ówek ¿±dania
	mov	al, [es:bx + 2]		; kod rozkazu

	test	al, al			; 0 = INIT
	jz	.init

	cmp	al, 4			; czy kto¶ chce czytaæ dane?
	je	.czytanie

	cmp	al, 5
	je	.czytanie2

					; innych ¿±dañ nie obs³ugujemy

.koniec_przer:
					; s³owo wyniku w [es:bx+3]

	mov	word [es:bx + 3], 100h	; mówimy, ¿e wszystko zrobione

	pop	ax
	pop	bx
	pop	es
	popf

	retf

.init:
				; podajemy adres koñca kodu, który ma
				; zostaæ w pamiêci
				; mo¿na usun±æ niepotrzebny ju¿ kod
	mov	word [es:bx + 0eh], koniec
	mov	[es:bx + 10h], cs
	pusha
	push	es

	mov	ah, 3			; pobranie aktualnej pozycji kursora
	xor	bx, bx
	int	10h			; DH, DL - wiersz, kolumna kursora

	inc	dh
	xor	dl, dl			; idziemy o 1 wiersz ni¿ej,
					; od lewej krawêdzi
	push	cs
	mov	ax, 1301h		; AH=funkcja pisania na ekran.
					; AL=przesuwaj kursor
	mov	bx, 7			; normalne znaki (szary na czarnym)
	mov	cx, init1_dl		; d³ugo¶æ napisu
	mov	bp, init1		; adres napisu
	pop	es			; segment napisu = CS
	int	10h			; napis na ekran.
					; DH, DL wskazuj± pozycjê.
	pop	es
	popa

	jmp	short .koniec_przer

.czytanie:			; jak kto¶ chce czytaæ, zwracamy mu EOF
	push	es
	push	ax
	push	cx
	push	di

	mov	cx, [es:bx + 12h]	; liczba ¿±danych bajtów
	les	di, [es:bx + 0Eh]	; adres czytania/zapisywania
	mov	al, 1Ah			; 1ah = EOF
	rep	stosb			; zapisujemy

	pop	di
	pop	cx
	pop	ax
	pop	es
	jmp	short .koniec_przer

.czytanie2:			; jak kto¶ chce czytaæ, zwracamy mu EOF
	mov	byte [es:bx+0Dh], 1Ah
	jmp	short .koniec_przer

request_header	dd	0		; wska¼nik na nag³ówek ¿±dania

strategia:

	pushf
	mov	[cs:request_header], bx	; zapisujemy adres nag³ówka ¿±dania
	mov	[cs:request_header+2], es

	cmp	byte [cs:pierwsze], 1
	jne	.nie_pisz

	mov	byte [cs:pierwsze], 0
	pusha
	push	es

	mov	ah, 3			; pobranie aktualnej pozycji kursora
	xor	bx, bx
	int	10h			; DH, DL - wiersz, kolumna kursora

	inc	dh
	xor	dl, dl			; idziemy o 1 wiersz ni¿ej,
					; od lewej krawêdzi

	push	cs
	mov	ax, 1301h		; AH=funkcja pisania na ekran.
					; AL=przesuwaj kursor
	mov	bx, 7			; normalne znaki (szary na czarnym)
	mov	cx, info1_dl		; d³ugo¶æ napisu
	mov	bp, info1		; adres napisu
	pop	es			; segment napisu = CS
	int	10h			; napis na ekran.
					; DH, DL wskazuj± pozycjê.
	pop	es
	popa

.nie_pisz:
	popf
	retf

info1		db	"*** Uruchamianie sterownika MYSZKA1...",10,13,10,13
info1_dl	equ	$ - info1
init1		db	"*** INIT", 13, 10, 13, 10
init1_dl	equ	$ - init1
pierwsze	db	1

; wszystko od tego miejsca zostanie wyrzucone z pamiêci
koniec:</PRE>



<P><a name="sys_tut13" id="sys_tut13">Jak widaæ, by³o tu o wiele wiêcej</a>
 opisu ni¿ samej roboty i wcale nie okaza³o siê to takie straszne.</P>
<P>
Aby zobaczyæ, czy nasz sterownik rzeczywi¶cie zosta³ za³adowany i ile zajmuje miejsca w pamiêci,
nale¿y wydaæ polecenie <code>mem /c/p</code>.
</P>
<P>Mi³ej zabawy.</P>


<br><br>
<div class="bezdruk">
<A accesskey="1" hreflang="pl" href="../index.htm">Spis tre¶ci off-<span lang="en">line</span></a> (Alt+1)<BR>
<A accesskey="2" hreflang="pl" href="../index.php">Spis tre¶ci on-<span lang="en">line</span></a> (Alt+2)<br>
<A accesskey="0" hreflang="pl" href="../ulatwie.htm">U³atwienia dla niepe³nosprawnych</a> (Alt+0)<BR>
</div>

</BODY></HTML>
