<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
        "http://www.w3.org/TR/html4/loose.dtd">
<HTML lang="pl">
<HEAD>
<META HTTP-EQUIV="Content-Type"       CONTENT="text/html; charset=ISO-8859-2">
<META HTTP-EQUIV="Content-Language"   CONTENT="pl">
<META http-equiv="Content-Style-Type" content="text/css">
<META HTTP-EQUIV="X-Frame-Options"    CONTENT="DENY">
<LINK rel="stylesheet" href="../asm.css" type="text/css">

<TITLE> Asembler: DOS: Porty szeregowe i równoleg³e </TITLE>
<link rel="Start"    hreflang="pl" lang="en" href="../index.htm">
<link rel="Contents" hreflang="pl" lang="en" href="../index.htm">

<META NAME="Author" CONTENT="Bogdan D.">
<META NAME="Description" CONTENT="Porty szeregowe i równoleg³e">
<META NAME="Keywords" CONTENT="asm, assembler, asembler, DOS, porty, szeregowe, równoleg³e, COM, LPT">
<META NAME="Language" CONTENT="pl">
<META NAME="Generator" CONTENT="KWrite/Kate; www.kate-editor.org">
<meta http-equiv="Last-Modified" content="Sun, Jul 10 2016 10:55:49 GMT">
</HEAD><BODY>

<h1 class="nag">Porty szeregowe i równoleg³e</h1>

<P>
Niektórym programom nie wystarcza dzia³anie na samym procesorze czy sprzêcie
znajduj±cym siê w komputerze. Czasem trzeba po³±czyæ siê z jakim¶ urz±dzeniem
zewnêtrznym, takim jak modem zewnêtrzny czy drukarka. Celem tego artyku³u jest
w³a¶nie pokazanie, jak to zrobiæ. Przydatny bêdzie
<A HREF="http://www-2.cs.cmu.edu/afs/cs.cmu.edu/user/ralf/pub/WWW/files.html" hreflang="en"
>spis przerwañ Ralfa <span lang="en">Brown</span>'a
(<acronym lang="en" title="Ralf Brown's Interrupt List">RBIL</acronym>)</A></P>

<P>
Informacje tu zgromadzone pochodz± z ksi±¿ki <a href="http://webster.cs.ucr.edu" hreflang="en"
lang="en">Art of Assembly</a> autorstwa Randalla Hyde'a i z informacji pochodz±cych z RBIL.
Nie mia³em mo¿liwo¶ci ich zweryfikowania.</P>





<hr>
<h2 class="nag">Dostêp przez <acronym lang="en" title="Basic Input/Output System">BIOS</acronym></h2>
	<BR><a href="#porty" class="bezdruk" tabindex="1">(przeskocz BIOS)</a>

<P>
BIOS oferuje nam dostêp tylko do portów szeregowych, za po¶rednictwem przerwania int 14h.</P>
<ol>
 <li>AH=0 - inicjalizacja portu.<br>
 	<P>Rejestr AL ma zawieraæ parametry portu:</P>
 	<ul>
 	 <li>bity 5-7: szybko¶æ, w bitach na sekundê: 000 - 110bps, 001 - 150bps, 010 - 300bps,
 	 	011 - 600bps, 100 - 1200bps, 101 - 2400bps, 110 - 4800bps, 111 - 9600bps.</li>
 	 <li>bity 3-4: tryb parzysto¶ci: 00 - brak, 01 - nieparzysta, 10 - brak, 11 - parzysta.</li>
 	 <li>bit 2: liczba bitów stopu: 0 - 1 bit stopu, 1 - 2 bity stopu.</li>
 	 <li>bity 0-1: bity danych: 10 - 7 bitów, 11 - 8 bitów danych</li>
 	</ul>
 	<P>Rejestr DX ma zawieraæ numer portu, od 0 dla COM1 do 3 dla COM4.<br>
 	Po wykonaniu tej operacji, w AX zwracany jest stan portu (patrz AH=3 poni¿ej).<br>
 	Przyk³ad:</P>
 	<pre>
		mov	ah, 0		; numer funkcji
		mov	al, 11100011b	; 9600,8,N (brak parzysto¶ci),1
		mov	dx, 0		; COM1
		int	14h</pre>
 	</li>

 <li>AH=1 - wy¶lij znak do portu.<br>
 	<P>DX ma zawieraæ numer portu, jak powy¿ej. AL ma zawieraæ wysy³any znak.<br>
 	Je¶li po wykonaniu tej operacji najstarszy bit AH jest jedynk±, to wyst±pi³ b³±d.
 	<br>Przyk³ad:</P>
 	<pre>
		mov	ah, 1		; numer funkcji
		mov	al, "a"		; znak do wys³ania
		mov	dx, 0		; COM1
		int	14h</pre>
 	</li>

 <li>AH=2 - odbierz znak z portu.<br>
 	<P>DX ma zawieraæ numer portu, jak powy¿ej.<br>
 	Po wykonaniu przerwania int 14h, AL bêdzie zawieraæ odebrany znak.<br>
 	Je¶li po wykonaniu tej operacji najstarszy bit AH jest jedynk±, to wyst±pi³ b³±d.
 	<br>Przyk³ad:</P>
 	<pre>
		mov	ah, 2		; numer funkcji
		mov	dx, 0		; COM1
		int	14h		; znak w AL, je¶li nie ma b³êdu</pre>
 	</li>

 <li>AH=3 - odczytaj stan portu portu.<br>
 	<P>DX ma zawieraæ numer portu, jak powy¿ej.<br>
 	Po wykonaniu przerwania int 14h, AX bêdzie zawieraæ stan portu. Znaczenie kolejnych
 	bitów przedstawia tabela:</P>

	<table class="c" summary="Bity statusu portu">
	<CAPTION>Bity statusu portu</CAPTION>
	<TR class="c"> <TH id="numer"> numer </TH> <TH id="opis"> co znaczy </TH> </TR>

	<TR class="c"> <TD headers="numer"> 15 </td> <TD headers="opis"> Przekroczenie czasu oczekiwania <br> </td> </TR>
	<TR class="c"> <TD headers="numer"> 14 </td> <TD headers="opis"> Rejestr przesuniêcia transmisji (<span lang="en">Transmitter shift register</span>) pusty <br> </td> </TR>
	<TR class="c"> <TD headers="numer"> 13 </td> <TD headers="opis"> Rejestr przechowania transmisji (<span lang="en">Transmitter holding register</span>) pusty <br> </td> </TR>
	<TR class="c"> <TD headers="numer"> 12 </td> <TD headers="opis"> B³±d wykrywania przerwy <br> </td> </TR>
	<TR class="c"> <TD headers="numer"> 11 </td> <TD headers="opis"> B³±d ramki <br> </td> </TR>
	<TR class="c"> <TD headers="numer"> 10 </td> <TD headers="opis"> B³±d parzysto¶ci <br> </td> </TR>
	<TR class="c"> <TD headers="numer"> 9 </td> <TD headers="opis"> B³±d przepe³nienia <br> </td> </TR>
	<TR class="c"> <TD headers="numer"> 8 </td> <TD headers="opis"> Dane s± dostêpne <br> </td> </TR>
	<TR class="c"> <TD headers="numer"> 7 </td> <TD headers="opis"> Wykryto sygna³ linii odbiorczej <br> </td> </TR>
	<TR class="c"> <TD headers="numer"> 6 </td> <TD headers="opis"> Wska¼nik dzwonienia <br> </td> </TR>
	<TR class="c"> <TD headers="numer"> 5 </td> <TD headers="opis"> Dane s± gotowe (DSR) <br> </td> </TR>
	<TR class="c"> <TD headers="numer"> 4 </td> <TD headers="opis"> Mo¿na wysy³aæ (CTS) <br> </td> </TR>
	<TR class="c"> <TD headers="numer"> 3 </td> <TD headers="opis"> Wykryto sygna³ linii odbiorczej delta <br> </td> </TR>
	<TR class="c"> <TD headers="numer"> 2 </td> <TD headers="opis"> Wykryto dzwonek na krawêdzi opadaj±cej <br> </td> </TR>
	<TR class="c"> <TD headers="numer"> 1 </td> <TD headers="opis"> Dane delta s± gotowe <br> </td> </TR>
	<TR class="c"> <TD headers="numer"> 0 </td> <TD headers="opis"> Mo¿na wysy³aæ dane delta <br> </td> </TR>
	</table>

</ol>






<hr>
<h2 class="nag"><a name="porty" id="porty">Dostêp poprzez instrukcje IN i OUT</a></h2>
	<BR><a href="#dos" class="bezdruk">(przeskocz dostêp przez porty)</a>

<ol>
<li>Porty szeregowe.<br>
	<P>Dla portów szeregowych przeznaczone s± porty sprzêtowe: 03F8h-03FFh (COM1),
	02E8h-02EFh (COM2), 02F8h-02FFh (COM3), 03E8h-03EFh (COM4).<br>
	Pierwszy z ka¿dej grupy portów (port bazowy) jest portem danych - na niego wysy³a siê bajty
	do transmisji i z niego odczytuje siê bajty odebrane przez port.<br>
	Port baza+3 jest portem kontroli linii. Ustawia siê w nim parametry portu:</P>
	<ul>
	 <li>bity 3-5 to kontrola parzysto¶ci: xx0 - brak, 001 - nieparzysta, 011 - parzysta,
	 	101 - wysoka, 111 - niska, xx1 - programowa (x oznacza dowoln± warto¶æ).</li>
	 <li>bit 2 okre¶la liczbê bitów stopu: 0 - 1 bit stopu, 1 - 2 bity (je¶li bity danych
	 	to 6, 7 lub 8) lub pó³tora bitu stopu (je¶li bitów danych jest 5).</li>
	 <li>bity 0-1 mówi± o ilo¶ci bitów danych: 00 - 5 bitów, 01 - 6 bitów, 10 - 7 bitów,
	 	11 - 8 bitów</li>
	</ul>
	<P>Port baza+5 to port stanu linii (tylko do odczytu). Najwa¿niejsze jego bity to:</P>
	<ul>
	 <li>bit 5 - je¶li równy 1, to kontroler mo¿e przyj±æ kolejny znak do wys³ania.</li>
	 <li>bit 2 - b³±d parzysto¶ci</li>
	 <li>bit 1 - przepe³nienie. Poprzedni znak w buforze zosta³ stracony.</li>
	 <li>bit 0 - odebrano ca³y bajt i jest on gotowy do przeczytania.</li>
	</ul>
	<P>Przyk³ad:</P>
	<pre>
			mov	dx, 3f8h + 5	; status COM1
		spr_gotowy:
			in	al, dx
			test	al, 20h		; sprawd¼ bit 5
			jz	spr_gotowy	; czekaj na gotowo¶æ
			mov	dx, 3f8h	; bazowy port COM1
			mov	al, 55h		; bajt do wys³ania
			out	dx, al		; wy¶lij bajt</pre>
	</li>


<li>Porty równoleg³e.<br>
	<P>Dla portów równoleg³ych przeznaczone s± porty sprzêtowe: 0278h-027Ah (LPT1),
	0378h-037Ah (LPT2).<br>
	Pierwszy z ka¿dej grupy portów (port bazowy) jest portem danych - na niego wysy³a siê bajty
	do transmisji i z niego odczytuje siê bajty odebrane przez port (w przypadku portów
	dwukierunkowych).<br>
	Port baza+1 jest portem stanu. Jego najwa¿niejsze bity to:</P>
	<ul>
	 <li>bit 7 - je¶li równy 1, to kontroler jest zajêty.</li>
	 <li>bit 6 - brak potwierdzenia</li>
	 <li>bit 5 - koniec papieru (drukarka)</li>
	 <li>bit 3 - ¿aden b³±d nie wyst±pi³</li>
	</ul>
	<P>Port baza+2 jest portem kontroli. Nie zawiera ¿adnych interesuj±cych nas bitów.</P>
	</li>
</ol>







<hr>
<h2 class="nag"><a name="dos" id="dos">Dostêp przez
	<acronym lang="en" title="Disk Operating System">DOS</acronym></a></h2>
<P>
W DOSie mo¿na oczywi¶cie u¿ywaæ przedstawionych powy¿ej sposobów na dostêp do portów, ale jest
te¿ jeszcze jedna mo¿liwo¶æ - zapis do plików specjalnych. DOS powinien utworzyæ specjalne
"urz±dzenia", których mo¿na u¿ywaæ tak samo jak plików, a same dane l±duj± nie w plikach,
a w portach.</P>
<P>
 Te specjalne urz±dzenia maj± nazwy "COM1", "COM2", "COM3", "COM4", "LPT1",
"LPT2" (oczywi¶cie nie wszystkie musz± byæ obecne na ka¿dym systemie). Otwieraj±c plik
o nazwie "COM1" i zapisuj±c do niego dane, tak naprawdê nie zapisujemy ich do ¿adnego
pliku, a s± one wysy³ane do urz±dzenia przy³±czonego do portu COM1. Dlatego czasem mo¿e
byæ problem z utworzeniem realnego pliku o nazwie "COM1", a nawet je¶li da siê go
stworzyæ, to zapisywane do niego dane mog± nie trafiaæ tam, gdzie by¶my tego
oczekiwali.</P>
<P>
Tych urz±dzeñ mo¿na u¿ywaæ jak normalnych plików, a to opisa³em <a href="a_kurs11.htm"
hreflang="pl">w swoim kursie</a>.</P>


<br><br>
<div class="bezdruk">
<A accesskey="1" hreflang="pl" href="../index.htm">Spis tre¶ci off-<span lang="en">line</span></a> (Alt+1)<BR>
<A accesskey="2" hreflang="pl" href="../index.php">Spis tre¶ci on-<span lang="en">line</span></a> (Alt+2)<br>
<A accesskey="0" hreflang="pl" href="../ulatwie.htm">U³atwienia dla niepe³nosprawnych</a> (Alt+0)<BR>
</div>

</BODY></HTML>
